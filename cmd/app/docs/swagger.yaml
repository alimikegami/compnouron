definitions:
  dto.BriefTeamResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.CompetitionRegistrationRequest:
    properties:
      competitionID:
        type: integer
      teamID:
        type: integer
      userID:
        type: integer
    type: object
  dto.CompetitionRequest:
    properties:
      contactPerson:
        type: string
      description:
        type: string
      isTeam:
        type: integer
      isTheSameInstitution:
        type: integer
      level:
        type: string
      name:
        type: string
      teamCapacity:
        type: integer
    type: object
  dto.CompetitionResponse:
    properties:
      ID:
        type: integer
      contactPerson:
        type: string
      isTeam:
        type: integer
      level:
        type: string
      name:
        type: string
    type: object
  dto.Credential:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.DetailedCompetitionResponse:
    properties:
      contactPerson:
        type: string
      description:
        type: string
      id:
        type: integer
      isTeam:
        type: integer
      isTheSameInstitution:
        type: integer
      level:
        type: string
      name:
        type: string
      registrationPeriodStatus:
        type: integer
      teamCapacity:
        type: integer
      userID:
        type: integer
      userName:
        type: string
    type: object
  dto.RecruitmentApplicationRequest:
    properties:
      recruitmentID:
        type: integer
    type: object
  dto.RecruitmentApplicationResponse:
    properties:
      ID:
        type: integer
      acceptanceStatus:
        type: integer
      recruitmentID:
        type: integer
      userID:
        type: integer
      userName:
        type: string
    type: object
  dto.RecruitmentDetailsResponse:
    properties:
      recruitment:
        $ref: '#/definitions/dto.RecruitmentResponse'
      recruitmentApplications:
        items:
          $ref: '#/definitions/dto.RecruitmentApplicationResponse'
        type: array
    type: object
  dto.RecruitmentRequest:
    properties:
      description:
        type: string
      role:
        type: string
      teamID:
        type: integer
    type: object
  dto.RecruitmentResponse:
    properties:
      ID:
        type: integer
      description:
        type: string
      role:
        type: string
      teamID:
        type: integer
      teamName:
        type: string
    type: object
  dto.SkillRequest:
    properties:
      name:
        type: string
    type: object
  dto.TeamDetailsResponse:
    properties:
      capacity:
        type: integer
      description:
        type: string
      members:
        items:
          $ref: '#/definitions/dto.TeamMemberResponse'
        type: array
      name:
        type: string
    type: object
  dto.TeamMemberResponse:
    properties:
      id:
        type: integer
      isLeader:
        type: integer
      name:
        type: string
    type: object
  dto.TeamRequest:
    properties:
      capacity:
        type: integer
      description:
        type: string
      name:
        type: string
    type: object
  dto.TokenResponse:
    properties:
      token:
        type: string
      tokenType:
        type: string
    type: object
  dto.UserRecruitmentApplicationHistory:
    properties:
      acceptanceStatus:
        type: integer
      id:
        type: integer
      recruitmentID:
        type: integer
      recruitmentRole:
        type: string
    type: object
  dto.UserRegistrationRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      schoolInstitution:
        type: string
      skills:
        items:
          $ref: '#/definitions/dto.SkillRequest'
        type: array
    type: object
  response.Response:
    properties:
      data: {}
      message: {}
      status:
        type: string
    type: object
host: localhost:1323
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Compnouron API
  version: "1.0"
paths:
  /competitions:
    get:
      description: This endpoint will return the competitions data with pagination
        implemented and also with keyword searching capability
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: rows retrieved limit
        in: query
        name: limit
        required: true
        type: integer
      - description: skipped rows
        in: query
        name: offset
        required: true
        type: integer
      - description: competition name keyword
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.CompetitionResponse'
                  type: array
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get competitions data
      tags:
      - Competitions
    post:
      consumes:
      - application/json
      description: Given the request body, create a competition record in the database
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompetitionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create new competition
      tags:
      - Competitions
  /competitions/{id}:
    delete:
      description: Given the ID path parameters, this endpoint will delete the existing
        competition's data
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete competition's data
      tags:
      - Competitions
    get:
      consumes:
      - application/json
      description: Given the competition ID on the path parameter, get the details
        of that particular competition
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.DetailedCompetitionResponse'
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: get the details of one particular competition
      tags:
      - Competitions
    put:
      consumes:
      - application/json
      description: Given the request body and the ID path parameters, this endpoint
        will update the existing competition's data
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompetitionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update competition's data
      tags:
      - Competitions
  /competitions/{id}/close:
    put:
      description: Given the competition ID path parameters, this endpoint will close
        the competition registration period
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Close competition registration period
      tags:
      - Competitions
  /competitions/{id}/open:
    put:
      description: Given the competition ID path parameters, this endpoint will open
        the competition registration period
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Open competition registration period
      tags:
      - Competitions
  /competitions/{id}/registrations:
    get:
      description: Given the ID path parameters and the status query parameteres,
        this endpoint will retrieve the competition registration data of a particular
        ID and accepted status if the query parameters are given
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: filter to get accepted registrations record
        in: query
        name: status
        required: true
        type: integer
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get competition registration data
      tags:
      - Competitions
  /competitions/registrations:
    post:
      consumes:
      - application/json
      description: Given the request body, create a competition registration record
        in the database
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompetitionRegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create new competition registrations
      tags:
      - Competitions
  /competitions/registrations/{id}/accept:
    put:
      description: Given the competition registration ID path parameters, this endpoint
        will accept the competition registration
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Accept competition application
      tags:
      - Competitions
  /competitions/registrations/{id}/reject:
    put:
      description: Given the competition registration ID path parameters, this endpoint
        will reject the competition registration
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Competition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Reject competition application
      tags:
      - Competitions
  /recruitments:
    get:
      description: This endpoint will return the recruitments data with pagination
        implemented and also with keyword searching capability
      parameters:
      - description: rows retrieved limit
        in: query
        name: limit
        required: true
        type: integer
      - description: skipped rows
        in: query
        name: offset
        required: true
        type: integer
      - description: recruitment role keyword
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.RecruitmentResponse'
                  type: array
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get recruitments's data
      tags:
      - Recruitments
    post:
      consumes:
      - application/json
      description: Given the request body, create a recruiment record in the database
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RecruitmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create new recruitment
      tags:
      - Recruitments
  /recruitments/{id}:
    delete:
      description: Given the ID path parameters, this endpoint will delete the existing
        recruitment's data
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Recruitment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete recruitment's data
      tags:
      - Recruitments
    get:
      description: Given the recruitment ID on path parameter, this endpoint will
        return the data associated with that particular recruitment (briefly)
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Recruitment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.RecruitmentDetailsResponse'
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get recruitment data
      tags:
      - Recruitments
    put:
      consumes:
      - application/json
      description: Given the request body and the ID path parameters, this endpoint
        will update the existing recruitment's data
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Recruitment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RecruitmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update recruitment's data
      tags:
      - Recruitments
  /recruitments/{id}/close:
    put:
      description: Given the recruitment ID path parameters, this endpoint will close
        the recruitment application period
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Recruitment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Close recruitment application period
      tags:
      - Recruitments
  /recruitments/{id}/details:
    get:
      description: Given the recruitment ID on path parameter, this endpoint will
        return the detailed data associated with that particular recruitment
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Recruitment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.RecruitmentDetailsResponse'
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get detailed recruitment's data
      tags:
      - Recruitments
  /recruitments/{id}/open:
    put:
      description: Given the recruitment ID path parameters, this endpoint will open
        the recruitment application period
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Recruitment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Open recruitment application period
      tags:
      - Recruitments
  /recruitments/applications:
    post:
      consumes:
      - application/json
      description: Given the request body, create a recruiment application record
        in the database
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RecruitmentApplicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create new recruitment appliation
      tags:
      - Recruitments
  /recruitments/applications/{id}/accept:
    put:
      description: Given the recruitment application ID path parameters, this endpoint
        will accept the recruitment application
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Recruitment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Accept recruitment application
      tags:
      - Recruitments
  /recruitments/applications/{id}/reject:
    put:
      description: Given the recruitment application ID path parameters, this endpoint
        will reject the recruitment application
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Recruitment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Reject recruitment application
      tags:
      - Recruitments
  /recruitments/teams/{id}:
    get:
      description: Given the team ID on path parameter, this endpoint will return
        the recruitment data associated with that team
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.RecruitmentResponse'
                  type: array
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get recruitment's data of a particular team
      tags:
      - Recruitments
  /teams:
    post:
      consumes:
      - application/json
      description: Given the request body, the API will create a new team data
      parameters:
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TeamRequest'
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create new team
      tags:
      - Teams
  /teams/{id}:
    delete:
      description: Given the ID path parameters, this endpoint will delete the existing
        team's data
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete team's data
      tags:
      - Teams
    get:
      description: Given the team ID, retrieve the detailed team's data that are associated
        with that particular ID
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.TeamDetailsResponse'
                  type: array
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get detailed team's data by team ID
      tags:
      - Teams
    put:
      consumes:
      - application/json
      description: Given the request body and the ID path parameters, this endpoint
        will update the existing team's data
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update team's data
      tags:
      - Teams
  /teams/users/{id}:
    get:
      description: Given the user ID as the path parameter, retrieve the team's data
        that are associated with that particular user
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.BriefTeamResponse'
                  type: array
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get team's data by user ID
      tags:
      - Teams
  /users:
    post:
      consumes:
      - application/json
      description: Given the request body, create a new user record in the database
      parameters:
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create new user account
      tags:
      - Users
  /users/{id}/competitions:
    get:
      description: Given the user ID on the path parameter, returns the competitions
        that has been created by that particular user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.CompetitionResponse'
                  type: array
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get the competitions that has been created by a particular user
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Given the credentials, authenticate the credentials and returns
        the JWT token if the credentials matched the record in the database
      parameters:
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.Credential'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.TokenResponse'
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login
      tags:
      - Users
  /users/recruitments/applications:
    get:
      description: Given the user ID on the JWT Token, returns the recruitment application
        histories of that user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserRecruitmentApplicationHistory'
                  type: array
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get the history recruitment application histories of a user
      tags:
      - Users
swagger: "2.0"
